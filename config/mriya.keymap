/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    macros {
        langEn: langEn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&to 0 &kp LGUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&to 0 &kp LGUI>;

            label = "LANGEN";
        };

        langRu: langRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&to 1 &kp LGUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&to 1 &kp LGUI>;

            label = "LANGRU";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp ESC                    &kp N1  &kp N2    &kp N3     &kp N4           &kp N5       &kp N6     &kp N7          &kp N8     &kp N9                  &kp N0         &kp MINUS
&kp LWIN  &kp GRAVE                  &kp Q   &kp D     &kp R      &kp W            &kp B        &kp J      &kp F           &kp U      &kp P                   &kp SEMICOLON  &kp BACKSLASH           &langRu
          &kp LCTRL                  &kp A   &kp S     &kp H      &kp T            &kp G        &kp Y      &kp N           &kp E      &kp O                   &kp I          &mt RCTRL SQT
          &mt LEFT_ALT LEFT_BRACKET  &kp Z   &kp X     &kp M      &kp C            &kp V        &kp K      &kp L           &kp COMMA  &kp DOT                 &kp FSLH       &mt RALT RIGHT_BRACKET
                                             &kp LGUI  &lt 3 TAB  &mt LSHFT SPACE  &lt 2 RET    &lt 3 ESC  &mt RSHFT BSPC  &lt 2 DEL  &mt RGUI RIGHT_BRACKET
            >;
        };

        layer_4 {
            bindings = <
        &trans     &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans   &trans     &trans
&trans  &kp GRAVE  &kp Q   &kp W   &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I      &kp O    &kp P      &kp LBKT  &langEn
        &trans     &kp A   &kp S   &kp D   &kp F   &kp G     &kp H   &kp J   &kp K      &kp L    &kp SEMI   &trans
        &trans     &kp Z   &kp X   &kp C   &kp V   &kp B     &kp N   &kp M   &kp COMMA  &kp DOT  &kp SLASH  &trans
                           &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans
            >;
        };

        lower_layer {
            bindings = <
        &trans          &trans    &trans  &trans     &trans    &trans       &trans     &trans    &trans     &trans    &trans    &trans
&trans  &kp UNDER       &kp F1    &kp F2  &kp F3     &kp F4    &kp F5       &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11          &mt RGUI F12
        &mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL  &kp N1    &kp N2  &kp N3     &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &trans
                                  &trans  &lt 4 TAB  &trans    &trans       &trans     &trans    &lt 4 DEL  &trans
            >;
        };

        raise_layer {
            bindings = <
        &trans           &trans           &trans     &trans     &trans     &trans          &trans        &trans         &trans     &trans     &trans           &trans
&trans  &kp KP_NUM       &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp HOME      &kp PAGE_DOWN  &kp PG_UP  &kp END    &kp SLCK         &kp CAPS         &trans
        &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp LEFT      &kp DOWN       &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
        &trans           &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END        &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &trans
                                          &trans     &trans     &trans     &lt 4 RET       &lt 4 ESC     &trans         &trans     &trans
            >;
        };

        adjust_layer {
            bindings = <
       &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
&none  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &none
       &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                  &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
